"use strict";(self.webpackChunkdatalayer_docs=self.webpackChunkdatalayer_docs||[]).push([[7010],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>k});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var d=r.createContext({}),p=function(e){var t=r.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},m=function(e){var t=p(e.components);return r.createElement(d.Provider,{value:t},e.children)},s="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,d=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),s=p(n),c=a,k=s["".concat(d,".").concat(c)]||s[c]||u[c]||l;return n?r.createElement(k,i(i({ref:t},m),{},{components:n})):r.createElement(k,i({ref:t},m))}));function k(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,i=new Array(l);i[0]=c;var o={};for(var d in t)hasOwnProperty.call(t,d)&&(o[d]=t[d]);o.originalType=e,o[s]="string"==typeof e?e:a,i[1]=o;for(var p=2;p<l;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},4725:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>u,frontMatter:()=>l,metadata:()=>o,toc:()=>p});var r=n(7462),a=(n(7294),n(3905));const l={id:"errors",title:"Error Messages",sidebar_position:4},i=void 0,o={unversionedId:"dev-resources/errors",id:"dev-resources/errors",title:"Error Messages",description:"| Error                    | Signature    | Description                                                                                                     |",source:"@site/docs/dev-resources/Errors.mdx",sourceDirName:"dev-resources",slug:"/dev-resources/errors",permalink:"/dev-resources/errors",draft:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{id:"errors",title:"Error Messages",sidebar_position:4},sidebar:"defaultSidebar",previous:{title:"Message Failure & Retry",permalink:"/dev-resources/TutorialSection/retry-execute"},next:{title:"API Reference",permalink:"/category/api-reference"}},d={},p=[],m={toc:p},s="wrapper";function u(e){let{components:t,...n}=e;return(0,a.kt)(s,(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Error"),(0,a.kt)("th",{parentName:"tr",align:null},"Signature"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"PacketNotProposed()"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"0x1c936052")),(0,a.kt)("td",{parentName:"tr",align:null},"Error emitted when a packet has not been proposed & message is tried for execution")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"InvalidPacketId()"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"0xb21147c1")),(0,a.kt)("td",{parentName:"tr",align:null},"Proposed packetId is invalid")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"InvalidProof()"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"0x09bde339")),(0,a.kt)("td",{parentName:"tr",align:null},"Proof of message inclusion for a given packetId is invalid")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"MessageAlreadyExecuted()"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"0x7448c64c")),(0,a.kt)("td",{parentName:"tr",align:null},"Message has already been executed")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"NotExecutor()"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"0xc32d1d76")),(0,a.kt)("td",{parentName:"tr",align:null},"Emitted when caller of ",(0,a.kt)("inlineCode",{parentName:"td"},"execute")," method on Socket does not have ",(0,a.kt)("inlineCode",{parentName:"td"},"EXECUTOR_ROLE"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"VerificationFailed()"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"0x439cc0cd")),(0,a.kt)("td",{parentName:"tr",align:null},"Packet verification failed on Switchboard")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"ErrInSourceValidation()"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"0xb39fb5d5")),(0,a.kt)("td",{parentName:"tr",align:null},"Error emitted when source chainSlug deduced from packetId and msgId don't match")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"LowGasLimit()"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"0xd38edae0")),(0,a.kt)("td",{parentName:"tr",align:null},"Gas Limit set for message execution is not sufficient to cover execution cost")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"SwitchboardExists()"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"0x2dff8555")),(0,a.kt)("td",{parentName:"tr",align:null},"Switchboard being registered on Socket already exists")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"InvalidConnection()"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"0x63228f29")),(0,a.kt)("td",{parentName:"tr",align:null},"Switchboard passed by Plug during connection does not exist")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"NoPermit(bytes32)"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"0x962f6333")),(0,a.kt)("td",{parentName:"tr",align:null},"Error message thrown when an address does not have permission to execute a function with onlyRole modifier")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"OnlySocket()"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"0x503284dc")),(0,a.kt)("td",{parentName:"tr",align:null},"Error triggered when not called by ",(0,a.kt)("inlineCode",{parentName:"td"},"Socket"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"MsgValueTooLow()"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"0x508aaf00")),(0,a.kt)("td",{parentName:"tr",align:null},"Execution fees paid to ",(0,a.kt)("inlineCode",{parentName:"td"},"EXECUTOR")," for message execution on destination chain are insufficient to cover gas fees")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"MsgValueTooHigh()"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"0x5dffc92f")),(0,a.kt)("td",{parentName:"tr",align:null},"Fees set for message delivery on ",(0,a.kt)("inlineCode",{parentName:"td"},"outbound")," method are too high")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"PayloadTooLarge()"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"0x492f620d")),(0,a.kt)("td",{parentName:"tr",align:null},"Emitted when payload length is too large")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"InsufficientFees()"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"0x8d53e553")),(0,a.kt)("td",{parentName:"tr",align:null},"Fees set for message delivery on ",(0,a.kt)("inlineCode",{parentName:"td"},"outbound")," method are insufficient")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"AlreadyAttested()"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"0x35d90805")),(0,a.kt)("td",{parentName:"tr",align:null},"Emitted when root is already attested by a ",(0,a.kt)("inlineCode",{parentName:"td"},"WATCHER"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"PlugDisconnected()"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"0xe741bafb")),(0,a.kt)("td",{parentName:"tr",align:null},"Error emitted when siblingPlug connection is not found")))))}u.isMDXComponent=!0}}]);