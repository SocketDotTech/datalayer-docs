"use strict";(self.webpackChunkdatalayer_docs=self.webpackChunkdatalayer_docs||[]).push([[5162],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>g});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(n),m=r,g=u["".concat(l,".").concat(m)]||u[m]||d[m]||o;return n?a.createElement(g,i(i({ref:t},p),{},{components:n})):a.createElement(g,i({ref:t},p))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:r,i[1]=s;for(var c=2;c<o;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9671:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var a=n(7462),r=(n(7294),n(3905));const o={},i=void 0,s={unversionedId:"Learn/Components/Packet",id:"Learn/Components/Packet",title:"Packet",description:"Packet is a cryptographic representation of PackedMessages. Capacitor produces Packets as soon as PackedMessages are added to it.",source:"@site/docs/Learn/Components/Packet.md",sourceDirName:"Learn/Components",slug:"/Learn/Components/Packet",permalink:"/Learn/Components/Packet",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"Capacitors",permalink:"/Learn/Components/Capacitors"},next:{title:"Plugs",permalink:"/Learn/Components/Plugs"}},l={},c=[],p={toc:c},u="wrapper";function d(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Packet is a cryptographic representation of PackedMessages. Capacitor produces Packets as soon as PackedMessages are added to it. "),(0,r.kt)("p",null,"PackedMessages created whenever a new message is sent via the Outbound method and are compressed representation of the following:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"chainSlug: ChainSlug of the local network"),(0,r.kt)("li",{parentName:"ul"},"msg.sender: Src Plug for the chainSlug"),(0,r.kt)("li",{parentName:"ul"},"SiblingChainSlug: ChainSlug for the sibling network"),(0,r.kt)("li",{parentName:"ul"},"SiblingPlug: Address for the sibling Plug on RemoteChainSlug"),(0,r.kt)("li",{parentName:"ul"},"MessageDetails: Details about a message such as ",(0,r.kt)("inlineCode",{parentName:"li"},"msgId"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"minMsgGasLimit"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"executionParams"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"payload")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"executionFee")),(0,r.kt)("li",{parentName:"ul"},"msgId : Unique identifier for a message"),(0,r.kt)("li",{parentName:"ul"},"minMsgGasLimit: Minimum gasLimit provided by the Plug for message execution on destination"),(0,r.kt)("li",{parentName:"ul"},"ExecutionFee: Execution fee provided by the Plug"),(0,r.kt)("li",{parentName:"ul"},"Payload: Message provided by the Plug to be relayed to destination"),(0,r.kt)("li",{parentName:"ul"},"executionParams: Additional execution details")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"        bytes32 packedMessage = hasher__.packMessage(\n            chainSlug,\n            msg.sender,\n            siblingChainSlug_,\n            plugConfig.siblingPlug,\n            messageDetails\n        );\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"SealedPacket = Seal(Packet(PackMessage(MSG_DETAILS)))\n")))}d.isMDXComponent=!0}}]);