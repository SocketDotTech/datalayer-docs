"use strict";(self.webpackChunkdatalayer_docs=self.webpackChunkdatalayer_docs||[]).push([[8310],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>g});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),l=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),d=l(n),f=a,g=d["".concat(s,".").concat(f)]||d[f]||u[f]||i;return n?r.createElement(g,o(o({ref:t},p),{},{components:n})):r.createElement(g,o({ref:t},p))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=f;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[d]="string"==typeof e?e:a,o[1]=c;for(var l=2;l<i;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},8182:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>c,toc:()=>l});var r=n(7462),a=(n(7294),n(3905));const i={id:"learn-tracking",title:"Tracking Messages & Packets"},o=void 0,c={unversionedId:"Learn/Concepts/learn-tracking",id:"Learn/Concepts/learn-tracking",title:"Tracking Messages & Packets",description:"\x3c!-- - Tracking",source:"@site/docs/Learn/Concepts/Tracking.md",sourceDirName:"Learn/Concepts",slug:"/Learn/Concepts/learn-tracking",permalink:"/Learn/Concepts/learn-tracking",draft:!1,tags:[],version:"current",frontMatter:{id:"learn-tracking",title:"Tracking Messages & Packets"},sidebar:"defaultSidebar",previous:{title:"Fees",permalink:"/Learn/Concepts/fees"},next:{title:"Off-Chain Agents",permalink:"/Learn/OffChain-Agents"}},s={},l=[],p={toc:l},d="wrapper";function u(e){let{components:t,...n}=e;return(0,a.kt)(d,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"When plugs send a message, a ",(0,a.kt)("inlineCode",{parentName:"p"},"MessageOutbound")," event is emitted with a ",(0,a.kt)("inlineCode",{parentName:"p"},"msgId"),", which is a unique identifier for each message. This is generated by performing bitwise operations on the local chain ID and message count"),(0,a.kt)("p",null,"The status of a message can be tracked using an API built by Socket. More on this in ",(0,a.kt)("a",{parentName:"p",href:"/dev-resources/APIReference/track-status"},"Status Tracking API")),(0,a.kt)("p",null,"Socket transmits packets from one chain to another. Messages need to get included into these packets to be delivered to the destination chain. Packets are also assigned a unique identifier ",(0,a.kt)("inlineCode",{parentName:"p"},"packetId"),", generated from the local chain ID, capacitor address and packet count on given capacitor. "),(0,a.kt)("p",null,"Once a message is sent outbound, it will be included in a packet. Packets are periodically sealed by Transmitters and then proposed on the destination chain. Upon sealing, a ",(0,a.kt)("inlineCode",{parentName:"p"},"PacketVerifiedAndSealed")," event is emitted. This has the ",(0,a.kt)("inlineCode",{parentName:"p"},"packetId")," and can be used to track the status of the packet a message is included in."))}u.isMDXComponent=!0}}]);